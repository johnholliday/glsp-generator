{
  "name": "{{#if config.extension.name}}{{config.extension.name}}{{else}}{{projectName}}-glsp-extension{{/if}}",
  "version": "{{config.extension.version}}",
  "displayName": "{{config.extension.displayName}}",
  "description": "{{config.extension.description}}",
  "publisher": "{{config.extension.publisher}}",
  "packageManager": "yarn@1.22.22",
  "main": "lib/extension/index.js",
  "private": true,
  "workspaces": false,
  {{#if config.extension.repository}}
  "repository": "{{config.extension.repository}}",
  {{/if}}
  {{#if config.extension.homepage}}
  "homepage": "{{config.extension.homepage}}",
  {{/if}}
  {{#if config.extension.bugs}}
  "bugs": "{{config.extension.bugs}}",
  {{/if}}
  {{#if config.extension.author}}
  "author": "{{config.extension.author}}",
  {{else}}
  "author": "Generated by glsp-generator",
  {{/if}}
  "license": "{{config.extension.license}}",
  {{#if config.extension.icon}}
  "icon": "{{config.extension.icon}}",
  {{/if}}
  {{#if config.extension.galleryBanner}}
  "galleryBanner": {{json config.extension.galleryBanner}},
  {{/if}}
  {{#if config.extension.badges}}
  "badges": {{json config.extension.badges}},
  {{/if}}
  "engines": {{#if config.extension.engines}}{{json config.extension.engines}}{{else}}{
    "vscode": "^1.75.0",
    "node": ">=16.0.0",
    "yarn": ">=1.0.0 <2.0.0"
  }{{/if}},
  "categories": {{#if config.extension.categories}}{{json config.extension.categories}}{{else}}["Programming Languages"]{{/if}},
  "activationEvents": {{#if config.extension.activationEvents}}{{json config.extension.activationEvents}}{{else}}[
    "onCommand:{{projectName}}.diagram.open",
    "onLanguage:{{projectName}}",
    "onCustomEditor:{{projectName}}.diagram",
    "workspaceContains:**/*.{{#if config.extension.fileExtension}}{{config.extension.fileExtension}}{{else}}{{projectName}}{{/if}}"
  ]{{/if}},
  "contributes": {{#if config.extension.contributes}}{{json config.extension.contributes}}{{else}}{
    "languages": [
      {
        "id": "{{projectName}}",
        "aliases": ["{{toPascalCase projectName}}", "{{projectName}}"],
        "extensions": [".{{#if config.extension.fileExtension}}{{config.extension.fileExtension}}{{else}}{{projectName}}{{/if}}"],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "{{projectName}}",
        "scopeName": "source.{{projectName}}",
        "path": "./syntaxes/{{projectName}}.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "{{projectName}}.diagram.open",
        "title": "{{toPascalCase projectName}}: Open as Diagram",
        "category": "{{toPascalCase projectName}}",
        "icon": "$(symbol-structure)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "resourceExtname == .{{#if config.extension.fileExtension}}{{config.extension.fileExtension}}{{else}}{{projectName}}{{/if}}",
          "command": "{{projectName}}.diagram.open",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "when": "resourceExtname == .{{#if config.extension.fileExtension}}{{config.extension.fileExtension}}{{else}}{{projectName}}{{/if}}",
          "command": "{{projectName}}.diagram.open",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceExtname == .{{#if config.extension.fileExtension}}{{config.extension.fileExtension}}{{else}}{{projectName}}{{/if}}",
          "command": "{{projectName}}.diagram.open",
          "group": "navigation"
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "{{projectName}}.diagram",
        "displayName": "{{toPascalCase projectName}} Diagram",
        "selector": [
          {
            "filenamePattern": "*.{{#if config.extension.fileExtension}}{{config.extension.fileExtension}}{{else}}{{projectName}}{{/if}}"
          }
        ],
        "priority": "option"
      }
    ]{{#if config.extension.features}},
    "configuration": {
      "title": "{{config.extension.displayName}}",
      "properties": {
        "{{projectName}}.useGlspImplementation": {
          "type": "boolean",
          "default": false,
          "description": "Use the pure GLSP implementation instead of the hybrid Sprotty implementation"
        },
        "{{projectName}}.glspServerUrl": {
          "type": "string",
          "default": "",
          "description": "URL of the GLSP server (if available). Leave empty for local mode."
        }
      }
    }{{/if}}
  }{{/if}},
  "scripts": {
    "build": "yarn build:extension && yarn build:webview",
    "build:extension": "yarn tsc",
    "build:webview": "webpack --config webpack.config.js",
    "watch": "concurrently \"yarn watch:extension\" \"yarn watch:webview\"",
    "watch:extension": "yarn tsc --watch",
    "watch:webview": "webpack --config webpack.config.js --watch",
    "clean": "yarn rimraf lib dist",
    "prepare": "yarn clean && yarn build",
    "vscode:prepublish": "yarn build"{{#if config.generation.generateTests}},
    "test": "yarn vitest"{{/if}}
  },
  "dependencies": {
    "@eclipse-glsp/client": "{{config.dependencies.[@eclipse-glsp/client]}}",
    "@eclipse-glsp/server": "{{config.dependencies.[@eclipse-glsp/server]}}",
    "@eclipse-glsp/theia-integration": "{{config.dependencies.[@eclipse-glsp/theia-integration]}}",
    "@theia/core": "{{config.dependencies.[@theia/core]}}",
    "inversify": "^6.0.0",
    "reflect-metadata": "^0.2.0",
    "sprotty": "^1.0.0",
    "sprotty-protocol": "^1.0.0"{{#each config.dependencies.customDeps}},
    "{{@key}}": "{{this}}"{{/each}}
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/vscode": "^1.75.0",
    "typescript": "^5.0.0",
    "rimraf": "^5.0.0",
    "webpack": "^5.0.0",
    "webpack-cli": "^5.0.0",
    "ts-loader": "^9.0.0",
    "css-loader": "^6.0.0",
    "style-loader": "^3.0.0",
    "concurrently": "^7.0.0",
    "process": "^0.11.10"{{#if config.generation.generateTests}},
    "vitest": "^1.0.0",
    "@vitest/ui": "^1.0.0"{{/if}}
  },
  "keywords": {{#if config.extension.keywords}}{{json config.extension.keywords}}{{else}}["glsp", "{{projectName}}", "visual-editor", "diagram"]{{/if}}
}
